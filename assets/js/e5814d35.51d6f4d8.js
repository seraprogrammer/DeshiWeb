"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[1312],{4261:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=n(4848),s=n(8453);const r={sidebar_position:13},o="Style Attribute",l={id:"Directives/style",title:"Style Attribute",description:"The $style directive is used to dynamically apply inline styles to elements",source:"@site/docs/Directives/style.md",sourceDirName:"Directives",slug:"/Directives/style",permalink:"/docs/Directives/style",draft:!1,unlisted:!1,editUrl:"https://github.com/DeshiJS/DeshiJS/docs/Directives/style.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Class Attribute",permalink:"/docs/Directives/class"},next:{title:"Attr Attribute",permalink:"/docs/Directives/attr"}},c={},d=[];function a(e){const t={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"style-attribute",children:"Style Attribute"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"$style"})," directive is used to dynamically apply inline styles to elements\r\nbased on data properties."]}),"\n",(0,i.jsx)(t.h1,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:'title="~index.html"',children:'<div $style="color:{textColor},background-color:{bgColor}">Content</div>\n'})}),"\n",(0,i.jsx)(t.h1,{id:"how-it-works",children:"How it Works"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["The framework parses the ",(0,i.jsx)(t.code,{children:"$style"})," attribute, splitting it into style\r\nproperty-value pairs. It sets up watchers for the referenced data properties."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"When a property changes, the corresponding style is updated."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"The element's inline styles are dynamically modified."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(t.p,{children:"If a referenced property doesn't exist, the style might not be applied, and a warning could be logged to the console."}),"\n",(0,i.jsx)(t.h1,{id:"note",children:"Note"}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"This directive allows for dynamic styling without the need for complex CSS classes or manual style manipulation in JavaScript."})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);