"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[4429],{9577:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(4848),r=n(8453);const s={sidebar_position:11},o="Model Attribute",a={id:"Directives/model",title:"Model Attribute",description:"The $model directive creates a two-way data binding between form inputs and",source:"@site/docs/Directives/model.md",sourceDirName:"Directives",slug:"/Directives/model",permalink:"/docs/Directives/model",draft:!1,unlisted:!1,editUrl:"https://github.com/DeshiJS/DeshiJS/docs/Directives/model.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Save Attribute",permalink:"/docs/Directives/save"},next:{title:"Class Attribute",permalink:"/docs/Directives/class"}},d={},c=[];function l(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"model-attribute",children:"Model Attribute"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"$model"})," directive creates a two-way data binding between form inputs and\r\nstate properties."]}),"\n",(0,i.jsx)(t.h1,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:'title="~index.html"',children:'<input $model="propertyName" />\n'})}),"\n",(0,i.jsx)(t.h1,{id:"how-it-works",children:"How it Works"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The framework sets up event listeners for input changes."}),"\n",(0,i.jsx)(t.li,{children:"When the input value changes, it updates the bound property in the state."}),"\n",(0,i.jsx)(t.li,{children:"When the state property changes programmatically, it updates the input value."}),"\n",(0,i.jsx)(t.li,{children:"The framework automatically keeps the view and state in sync."}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(t.p,{children:"If the specified property doesn't exist in the state, it might be created\r\nautomatically or an error might be logged to the console."}),"\n",(0,i.jsx)(t.h1,{id:"note",children:"Note"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"$model"})," simplifies form handling by automatically synchronizing input values\r\nwith state properties, reducing the need for manual event handling."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);