"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6180],{8877:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=i(4848),n=i(8453);const s={sidebar_position:14},o="Attr Attribute",a={id:"Directives/attr",title:"Attr Attribute",description:"The $attr directive is used to dynamically bind HTML attributes to data",source:"@site/docs/Directives/attr.md",sourceDirName:"Directives",slug:"/Directives/attr",permalink:"/docs/Directives/attr",draft:!1,unlisted:!1,editUrl:"https://github.com/DeshiJS/DeshiJS/docs/Directives/attr.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"Style Attribute",permalink:"/docs/Directives/style"},next:{title:"ForLoop Attribute",permalink:"/docs/Directives/for"}},d={},c=[];function l(t){const e={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"attr-attribute",children:"Attr Attribute"})}),"\n",(0,r.jsx)(e.p,{children:"The $attr directive is used to dynamically bind HTML attributes to data\r\nproperties."}),"\n",(0,r.jsx)(e.h1,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",metastring:'title="~index.html"',children:'<img $attr="src:imageUrl,alt:imageAlt" />\n'})}),"\n",(0,r.jsx)(e.h1,{id:"how-it-works",children:"How it Works"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"The framework parses the $attr attribute, splitting it into attribute-value\r\npairs."}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"It sets up watchers for the referenced data properties."}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"When a property changes, the corresponding attribute is updated."}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"The element's attributes are dynamically modified."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h1,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(e.p,{children:"If a referenced property doesn't exist, the attribute might not be set, and a warning could be logged to the console."}),"\n",(0,r.jsx)(e.h1,{id:"note",children:"Note"}),"\n",(0,r.jsx)(e.admonition,{type:"note",children:(0,r.jsx)(e.p,{children:"This directive provides a flexible way to dynamically update various HTML attributes based on your application's state."})})]})}function h(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},8453:(t,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var r=i(6540);const n={},s=r.createContext(n);function o(t){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:o(t.components),r.createElement(s.Provider,{value:e},t.children)}}}]);